{"version":3,"sources":["Components/Header.js","Components/Timer.js","Components/Loader.js","Components/Score.js","Components/MainBody.js","Components/GameOver.js","App.js","index.js"],"names":["Header","className","Timer","props","isNaN","timeLeft","name","spin","Loader","isLoading","Score","score","count","MainBody","question","disabled","onClick","handleAnswer","options","style","buttonStyle","msgClass","msg","GameOver","class","playAgain","App","useState","setCount","setIsloading","setScore","NaN","setTimeLeft","setQuestion","setMsg","setMsgClass","correct","setCorrect","incorrect1","setIncorrect1","incorrect2","setIncorrect2","incorrect3","setIncorrect3","setOptions","correctIndex","setCorrectIndex","setButtonStyle","useEffect","fetch","then","res","json","data","result","results","decodeHTML","correct_answer","incorrect_answers","catch","err","console","log","timmer","setInterval","prev","clearInterval","optionsArr","itemC","item2","item3","item4","index1","Math","random","toFixed","index2","index3","index4","createRandArr","html","txt","document","createElement","innerHTML","value","styles","color","borderColor","boxShadow","setTimeout","correctOption","selectedOption","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1c09d7e2.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../styles.css'\r\nconst Header=()=>{\r\n    return(\r\n        <div className='header-container'><span>Useless Trivia</span></div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport FA from 'react-fontawesome'\r\nconst Timer=(props)=>{\r\n    if(isNaN(props.timeLeft))\r\n    {\r\n        return(\r\n            <div className='timmer'><FA name=\"clock-o\" /> ---</div>\r\n        ) \r\n    }\r\n    else if(props.timeLeft<=10){\r\n        return <div className='timmer less-time-left'><FA name=\"clock-o\" spin/> {props.timeLeft}</div>\r\n    }\r\n    return(\r\n        <div className='timmer'><FA name=\"clock-o\" spin/> {props.timeLeft}</div>\r\n    )\r\n}\r\n\r\nexport default Timer","import React from 'react'\r\nconst Loader=(props)=>{\r\n    if(props.isLoading){\r\n        return(<div className='loader'></div>)\r\n    }\r\n    return(<div></div>)\r\n}\r\nexport default Loader","import React from 'react'\r\nimport Loader from './Loader'\r\nconst Score=(props)=>{\r\n    return (\r\n        <div className='loader-bar'>\r\n            <span className='score'>Score:<span>{props.score}/{props.count*10}</span></span>\r\n            <Loader isLoading={props.isLoading}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Score","import React from 'react'\r\nconst MainBody=(props)=>{\r\n    // console.log(props)\r\n    return(\r\n        <div >            \r\n            <div className='question-card'>\r\n                <div className='question'><span>Q.{props.count} </span><span>{props.question}</span></div><br/>\r\n                \r\n                <div className='options'>\r\n                    <button \r\n                    disabled={props.isLoading} \r\n                    onClick={()=>props.handleAnswer(props.options[0])}\r\n                    style={props.buttonStyle[0]}\r\n                    >\r\n                        {props.options[0]}\r\n                    </button>\r\n                    <button \r\n                    disabled={props.isLoading} \r\n                    onClick={()=>props.handleAnswer(props.options[1])}\r\n                    style={props.buttonStyle[1]}\r\n                    >\r\n                        {props.options[1]}\r\n                    </button>\r\n                    <button \r\n                    disabled={props.isLoading} \r\n                    onClick={()=>props.handleAnswer(props.options[2])}\r\n                    style={props.buttonStyle[2]}\r\n                    >\r\n                        {props.options[2]}\r\n                    </button>\r\n                    <button \r\n                    disabled={props.isLoading} \r\n                    onClick={()=>props.handleAnswer(props.options[3])}\r\n                    style={props.buttonStyle[3]}\r\n                    >\r\n                        {props.options[3]}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className={'message '+ props.msgClass}>{props.msg}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainBody","import React from 'react'\r\n\r\nconst GameOver=(props)=>{\r\n    return(\r\n    <div class='last-screen'>\r\n        <h1 className='game-over'>Game Over</h1>\r\n        <p className='final-score'>Final Score {props.score*10}/100</p>\r\n        <button onClick={()=>props.playAgain()}>Play Again !</button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default GameOver","import React,{useState,useEffect} from 'react'\r\nimport Header from './Components/Header'\r\nimport Timer from './Components/Timer'\r\nimport Score from './Components/Score'\r\nimport MainBody from './Components/MainBody'\r\nimport GameOver from './Components/GameOver'\r\n\r\nconst App=()=>{\r\n\r\n    // State Variables\r\n\r\n    const [count,setCount]=useState(1),\r\n          [isLoading,setIsloading]=useState(true),\r\n          [score,setScore]=useState(0),\r\n          [timeLeft,setTimeLeft]=useState(NaN),\r\n          [question,setQuestion]=useState(''),\r\n          [msg,setMsg]=useState('Choose an option'),\r\n          [msgClass,setMsgClass]=useState('info'),\r\n          [correct,setCorrect]=useState(''),\r\n          [incorrect1,setIncorrect1]=useState(''),\r\n          [incorrect2,setIncorrect2]=useState(''),\r\n          [incorrect3,setIncorrect3]=useState(''),\r\n          [options,setOptions]=useState([]),\r\n          [correctIndex,setCorrectIndex]=useState(),\r\n          [buttonStyle,setButtonStyle]=useState([]);\r\n\r\n    /*\r\n    \r\n            LOAD QUESTION DATA FROM API\r\n    */\r\n\r\n    useEffect(()=>{\r\n            fetch('https://opentdb.com/api.php?category=18&amount=1&type=multiple')\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                const result=data.results[0];\r\n                setQuestion(decodeHTML(result.question));\r\n                setCorrect(decodeHTML(result.correct_answer));\r\n                setIncorrect1(decodeHTML(result.incorrect_answers[0]));\r\n                setIncorrect2(decodeHTML(result.incorrect_answers[1]));\r\n                setIncorrect3(decodeHTML(result.incorrect_answers[2]));\r\n                setIsloading(false);\r\n                setTimeLeft(30);\r\n                setMsgClass('info');\r\n                setMsg('Choose an option');\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n            })\r\n            const timmer=setInterval(()=>setTimeLeft(prev=>prev-1),1000);\r\n             return(()=>clearInterval(timmer));\r\n    },[count]);\r\n   \r\n    /*\r\n    \r\n            RENDER OPTIONS ONCE THEY ARE FETCHED\r\n    */\r\n\r\n    useEffect(()=>{\r\n        let optionsArr=[];\r\n        /*\r\n        \r\n            RANDOMISE THE FETCHED OPTIONS IN AN ARRAY\r\n\r\n        */\r\n        const createRandArr=(itemC,item2,item3,item4)=>{\r\n            let index1=(Math.random()*(3)).toFixed();\r\n            optionsArr[index1]=itemC;\r\n            setCorrectIndex(index1);\r\n            let index2=(Math.random()*(3)).toFixed();\r\n            do{\r\n                index2=(Math.random()*(3)).toFixed();\r\n            }while(index2===index1);\r\n            optionsArr[index2]=item2;\r\n            let index3=(Math.random()*(3)).toFixed();\r\n            do{\r\n                index3=(Math.random()*(3)).toFixed();\r\n            }while(index3===index1||index2===index3);\r\n            optionsArr[index3]=item3;\r\n            let index4=(Math.random()*(3)).toFixed();\r\n            do{\r\n                index4=(Math.random()*(3)).toFixed();\r\n            }while(index4===index1||index4===index2||index4===index3);\r\n            optionsArr[index4]=item4;\r\n        }\r\n        createRandArr(correct,incorrect1,incorrect2,incorrect3);\r\n        setOptions(optionsArr);\r\n        setButtonStyle([]);\r\n        \r\n    },[correct,incorrect1,incorrect2,incorrect3]);\r\n\r\n\r\n\r\n    let decodeHTML = (html)=> {\r\n        let txt = document.createElement('textarea');\r\n        txt.innerHTML = html;\r\n        return txt.value;\r\n    };\r\n    /*\r\n    \r\n            HANDLE CLICK ON OPTIONS        \r\n\r\n    */\r\n    const handleAnswer=(selectedOption)=>{\r\n        let styles=[];\r\n        setIsloading(true);\r\n\r\n        if(selectedOption===correct){\r\n            setTimeLeft(NaN);\r\n            setMsgClass('success');\r\n            setMsg('Correct !');\r\n            setScore(prev=>++prev);\r\n\r\n        }else{\r\n            setTimeLeft(NaN);\r\n            setMsgClass('error');\r\n            setMsg('Incorrect !');\r\n            \r\n        }\r\n        /*\r\n    \r\n            CHANGE STYLES ON CLICK\r\n                *create array of styles based on correct index     \r\n\r\n        */\r\n        styles[correctIndex]={color:'green',borderColor:'green',boxShadow: '5px 4px 10px green'}\r\n        let index1=correctIndex;\r\n        while(index1===correctIndex){\r\n            index1=(Math.random()*(3)).toFixed();\r\n        }\r\n        styles[index1]={color:'red',borderColor:'red',boxShadow: '5px 4px 10px red'}\r\n        let index2=correctIndex;\r\n        while(index2===correctIndex||index2===index1){\r\n            index2=(Math.random()*(3)).toFixed();\r\n        }\r\n        styles[index2]={color:'red',borderColor:'red',boxShadow: '5px 4px 10px red'}\r\n\r\n        let index3=(Math.random()*(3)).toFixed();\r\n        while(index3===correctIndex||index3===index1||index3===index2){\r\n            index3=(Math.random()*(3)).toFixed();\r\n        }\r\n        styles[index3]={color:'red',borderColor:'red',boxShadow: '5px 4px 10px red'}\r\n        setButtonStyle(styles);\r\n\r\n        setTimeout(()=>{\r\n            setCount(prev=>prev+1);\r\n        },3000);\r\n    }\r\n    /*\r\n    \r\n            HANDLE IF TIME RUNS OUT\r\n\r\n    */\r\n    if(timeLeft===0)\r\n    {\r\n        let styles=[];\r\n        setIsloading(true);\r\n        setTimeLeft(NaN);\r\n        setMsgClass('error');\r\n        setMsg('Time Ran Out !');\r\n        /*\r\n        \r\n                CHANGE STYLES ON CLICK\r\n                *create array of styles based on correct index\r\n\r\n        */\r\n        styles[correctIndex]={color:'green',borderColor:'green',boxShadow: '5px 4px 10px green'}\r\n        let index1=correctIndex;\r\n        while(index1===correctIndex){\r\n            index1=(Math.random()*(3)).toFixed();\r\n        }\r\n        styles[index1]={color:'red',borderColor:'red',boxShadow: '5px 4px 10px red'}\r\n        let index2=correctIndex;\r\n        while(index2===correctIndex||index2===index1){\r\n            index2=(Math.random()*(3)).toFixed();\r\n        }\r\n        styles[index2]={color:'red',borderColor:'red',boxShadow: '5px 4px 10px red'}\r\n\r\n        let index3=(Math.random()*(3)).toFixed();\r\n        while(index3===correctIndex||index3===index1||index3===index2){\r\n            index3=(Math.random()*(3)).toFixed();\r\n        }\r\n        styles[index3]={color:'red',borderColor:'red',boxShadow: '5px 4px 10px red'}\r\n        setButtonStyle(styles);\r\n        setTimeout(()=>{\r\n        setCount(prev=>prev+1);\r\n        },3000);\r\n    }\r\n    /*\r\n        \r\n            HANDLE PLAY AGAIN BUTTON CLICK\r\n\r\n    */\r\n    const playAgain=()=>{\r\n        setCount(1);\r\n        setScore(0);\r\n        setTimeLeft(NaN);\r\n    }\r\n    /*\r\n        \r\n        IF QUESTION COUNT REACHES GREATER THAN 10 MARK GAME OVER\r\n\r\n    */\r\n    if(count>10){\r\n        return(<GameOver score={score} playAgain={playAgain}/>)\r\n    }else{\r\n        /*\r\n        \r\n            ELSE RENDER MAIN GAME\r\n\r\n        */\r\n            return(\r\n                <div className='main-container'>\r\n                    <Header/>\r\n                    <Timer timeLeft={timeLeft}/>\r\n                    <Score score={score*10} count={count} isLoading={isLoading}/>\r\n                    <MainBody \r\n                    isLoading={isLoading} \r\n                    question={question} \r\n                    options={options} \r\n                    correctOption={correct} \r\n                    handleAnswer={handleAnswer} \r\n                    msg={msg}\r\n                    count={count}\r\n                    msgClass={msgClass}\r\n                    correctIndex={correctIndex}\r\n                    buttonStyle={buttonStyle}\r\n                    />\r\n                </div> \r\n            )\r\n    }\r\n\r\n    \r\n}\r\n    \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles.css'\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}